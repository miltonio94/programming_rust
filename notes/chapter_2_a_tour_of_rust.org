* Programming Rust: Chapter 2 A Tour of Rust
** Function, variables and numbers
#+begin_src rust
fn gcd(mut n: u64, mut m: u64) -> u64 {
    assert!(n != 0 && m != 0);
    while m != 0 {
        if m < n {
            let t = m;
            m = n;
            n = t;
        }
        m = m % n;
    }
    n
}
#+end_src

** Rust builtin TDD
#+begin_src rust
  #[test]
  fn test_gcd() {
      assert_eq!(gcd(14, 15), 1);
      assert_eq!(gcd(2*3*5*11*17, 3*7*11*13*19),
                 3*11);
  }
#+end_src

** Importing
#+begin_src rust
  use std::str::FromStr;
  use std::env;
#+end_src

** Vectors

** Error are values with Result

** Macros

** Referencing and borrowing

** Adding dependencies to the project

** Closure

** Structure type

** Derive attribute

** Complex number type

** Generic structures

** Option type

** ~usize~

** Enumerated types (enums)

** Iterating

** Generic functions

** Tuples

** Questions to return to and answer
- What is a Mutex!?

